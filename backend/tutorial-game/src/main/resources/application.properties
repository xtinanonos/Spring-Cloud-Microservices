# Micro servicios de games:
# En el momento en el que al Gateway llega esta peticion: /game/**
# El Gateway redirige la aplicacion hacia la URI con el name del micro servicio
# Automaticamente, sabe en qué puerto debe quedarse escuchando,
# lo que permite redistribuir las peticiones para que no todas caigan en el mismo puerto
#Esto, a su vez, permite que los micro servicios sean escalables, ya que se puede clonar el codigo
# de un micro servicio en otro servidor y, simplemente, cambiando su puerto,
# se balancerán las peticiones entre los servidores
spring.application.name=spring-cloud-eureka-client-game
server.port=8093
#Database
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true
spring.jpa.show-sql=true
spring.h2.console.enabled=true
#Eureka
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
